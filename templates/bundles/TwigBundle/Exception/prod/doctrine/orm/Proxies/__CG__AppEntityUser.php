<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['email' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->email);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userdescription', '' . "\0" . 'App\\Entity\\User' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'plainPassword', 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'avatar', '' . "\0" . 'App\\Entity\\User' . "\0" . 'avatarFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'backgroundImage', '' . "\0" . 'App\\Entity\\User' . "\0" . 'backgroundImageFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'App\\Entity\\User' . "\0" . 'videos', '' . "\0" . 'App\\Entity\\User' . "\0" . 'photos', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isAdmin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userGroup', 'blogPost', 'event', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'facebook', '' . "\0" . 'App\\Entity\\User' . "\0" . 'youtube', '' . "\0" . 'App\\Entity\\User' . "\0" . 'twitter', '' . "\0" . 'App\\Entity\\User' . "\0" . 'instagram', '' . "\0" . 'App\\Entity\\User' . "\0" . 'location', '' . "\0" . 'App\\Entity\\User' . "\0" . 'resetPasswordToken'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userdescription', '' . "\0" . 'App\\Entity\\User' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'lastName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'plainPassword', '' . "\0" . 'App\\Entity\\User' . "\0" . 'avatar', '' . "\0" . 'App\\Entity\\User' . "\0" . 'avatarFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'backgroundImage', '' . "\0" . 'App\\Entity\\User' . "\0" . 'backgroundImageFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isActive', '' . "\0" . 'App\\Entity\\User' . "\0" . 'videos', '' . "\0" . 'App\\Entity\\User' . "\0" . 'photos', '' . "\0" . 'App\\Entity\\User' . "\0" . 'isAdmin', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'userGroup', 'blogPost', 'event', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\User' . "\0" . 'facebook', '' . "\0" . 'App\\Entity\\User' . "\0" . 'youtube', '' . "\0" . 'App\\Entity\\User' . "\0" . 'twitter', '' . "\0" . 'App\\Entity\\User' . "\0" . 'instagram', '' . "\0" . 'App\\Entity\\User' . "\0" . 'location', '' . "\0" . 'App\\Entity\\User' . "\0" . 'resetPasswordToken'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->email);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserdescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserdescription', []);

        return parent::getUserdescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserdescription($userdescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserdescription', [$userdescription]);

        return parent::setUserdescription($userdescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvent', []);

        return parent::getEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvent($event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvent', [$event]);

        return parent::setEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotos', []);

        return parent::getPhotos();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhotos($photos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhotos', [$photos]);

        return parent::setPhotos($photos);
    }

    /**
     * {@inheritDoc}
     */
    public function addPhotos($photos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhotos', [$photos]);

        return parent::addPhotos($photos);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhotos($photos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhotos', [$photos]);

        return parent::removePhotos($photos);
    }

    /**
     * {@inheritDoc}
     */
    public function getVideos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVideos', []);

        return parent::getVideos();
    }

    /**
     * {@inheritDoc}
     */
    public function setVideos($videos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVideos', [$videos]);

        return parent::setVideos($videos);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebook()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebook', []);

        return parent::getFacebook();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebook($facebook)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebook', [$facebook]);

        return parent::setFacebook($facebook);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstagram()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstagram', []);

        return parent::getInstagram();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstagram($instagram)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstagram', [$instagram]);

        return parent::setInstagram($instagram);
    }

    /**
     * {@inheritDoc}
     */
    public function getYoutube()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYoutube', []);

        return parent::getYoutube();
    }

    /**
     * {@inheritDoc}
     */
    public function setYoutube($youtube)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYoutube', [$youtube]);

        return parent::setYoutube($youtube);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitter', []);

        return parent::getTwitter();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitter($twitter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitter', [$twitter]);

        return parent::setTwitter($twitter);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlogPost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlogPost', []);

        return parent::getBlogPost();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlogPost($blogPost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlogPost', [$blogPost]);

        return parent::setBlogPost($blogPost);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserGroup', []);

        return parent::getUserGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserGroup($userGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserGroup', [$userGroup]);

        return parent::setUserGroup($userGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$password]);

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAdmin', []);

        return parent::getIsAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAdmin($isAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAdmin', [$isAdmin]);

        return parent::setIsAdmin($isAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', []);

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar($avatar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', [$avatar]);

        return parent::setAvatar($avatar);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackgroundImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackgroundImage', []);

        return parent::getBackgroundImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackgroundImage($backgroundImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackgroundImage', [$backgroundImage]);

        return parent::setBackgroundImage($backgroundImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', []);

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatarFile(\Symfony\Component\HttpFoundation\File\File $avatarFile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatarFile', [$avatarFile]);

        return parent::setAvatarFile($avatarFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatarFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatarFile', []);

        return parent::getAvatarFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackgroundImageFile(\Symfony\Component\HttpFoundation\File\File $backgroundImageFile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackgroundImageFile', [$backgroundImageFile]);

        return parent::setBackgroundImageFile($backgroundImageFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackgroundImageFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackgroundImageFile', []);

        return parent::getBackgroundImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function getResetPasswordToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResetPasswordToken', []);

        return parent::getResetPasswordToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setResetPasswordToken($resetPasswordToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResetPasswordToken', [$resetPasswordToken]);

        return parent::setResetPasswordToken($resetPasswordToken);
    }

}
